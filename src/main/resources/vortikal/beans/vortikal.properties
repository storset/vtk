################################################################
# 
# Web-app configuration
# 
# The variables defined in this file are project defaults, and may be
# overridden by setting them in the (personal) build.properties file
# (in project directory). This is the recommended approach.
# 
################################################################

# Base path for "non-repository" resources (bundled resources,
# application resources):
vrtx.staticResourcesBaseURL = /vrtx/__vrtx
webResources.baseURL = ${vrtx.staticResourcesBaseURL}/static-resources
webResources.physicalLocation = classpath:///web
appResources.baseURL = ${vrtx.staticResourcesBaseURL}/app-resources
themeBaseURL = ${webResources.baseURL}/themes/default
jsBaseURL = ${webResources.baseURL}/js

jquery.baseURL = ${webResources.baseURL}/jquery
# Remember also to change in person.vrtx
jquery.ui.version = 1.10.4

yui.baseURL = ${webResources.baseURL}/yui/2.6.0

# Flash base path
flash.baseURL = ${webResources.baseURL}/flash

staticResourcesCacheSeconds = 0
staticResources.handleLastModified = true

webCache.globalMaxAge = 0
webCache.excludedResourceTypes = 

# Main web service config:
# A value of '*' means 'any hostname', 'any protocol', 'any port, etc.'
webHostName = *
webProtocol = *
webPort = *
webProtocolRestricted = ${webProtocol}
webService.maxConcurrentRequests = -1
webService.tooManyRequests.rejectStatus = 503
manage.hostName = ${webHostName}
manage.protocol = ${webProtocol}
manage.port = ${webPort}

manage.localeresolver.cookieName = vrtx.manage.language
manage.localeResolver.cookieDomain =

logout.protocol = ${manage.protocol}

request.xForwardedFor = 

request.forwardFieldHeader = 

# WebDAV (host, protocol, port) config:
webdavHostName = *
webdavProtocol = http
webdavPort = 9321
webdav.collectionContentType = httpd/unix-directory

canonicalUrl.webPort = ${webPort}

# Support ETag-headers on WebDAV?
webdavSupportETags = true
webdav.deniedFiles = \\.DS_Store, \\._\\.DS_Store

# Comma-separated list of properties on the form NAMESPACE:PROP which shall not
# require authorization when queried for in PROPFIND requests with depth greater than 0:
# Note that colon must be escaped both due to properties format and if part of property namespace.
# So a colon in namespace must be prefixed with 3 backslashes here.
webdav.childAuthorizeWhitelistProperties = http\\\://apache.org/dav/props/\:executable

upload.maxFileSize = -1

sessionValidation.authorizedAddresses = 

# Configuration file containing URI prefixes for which to require
# secure (SSL) access:
ssl.configFile = /vrtx/ssl-config.txt

# Default locale settings:
manage.defaultLocale = en
view.defaultLocale = en

# Support HTTP range header?
displayResource.supportRangeRequests = true

# Bundled decorator templates:
manage.decoratorTemplatesLocation = classpath:///vortikal/decorator-templates
article.decoratorTemplatesLocation classpath:///vortikal/decorator-templates

# "Dynamic" info message:
manage.infoMessageFolderLocation = file://${user.home}/
manage.infoMessageDefaultFile = vrtx-message


# Start a management console?
# example: shell.InitFiles = classpath\:repository-utils.bsh,classpath\:service-utils.bsh
shell.initFiles =
shell.runEvalLoop = false
shell.listenPort = 9998
shell.listenAddress = localhost

vshell.initFiles =
vshell.runEvalLoop = true
vshell.listenPort = 9999
vshell.listenAddress = localhost
vshell.commandsLocation = classpath:vortikal/beans/standard-extensions/vshell/commands
vshell.sessionAuthenticator = vshell.rootPasswordSessionAuthenticator

defaultPrincipalDomain =
defaultGroupDomain =

security.sessionCookieLinksEnabled = false
security.rememberAuthMethod = false
security.spCookieDomain =
security.ssoWordWhitelist = /,html,htm,xml,php

# 1 hour and 30 mins in milliseconds
security.ssoTimeoutMilliseconds = 5400000

authenticationRealm = Vortex

# Password: echo -n username:realm:password | md5
#       OR: echo -n username:realm:password | md5sum
# Default-passwords for builtin system users:
# root@localhost:   fish
# vortex@localhost: surfer
# user@localhost:   pw
localPrincipals = { 'root@localhost'        \: '0a4872c6927f992f3808955b0938f808', \
                    'vortex@localhost'      \: 'b46c78fb2455c0875e8f5d35515e9fe7', \
                    'user@localhost'        \: '6292e997b1b4cf500c7356d6c6593b7e', \
                    'trusteduser@localhost' \: '', \
                    'nobody@localhost'      \: '' }

roles.rootPrincipals = ['root@localhost']
roles.readEverythingPrincipals = ['trusteduser@localhost']

groups.staticGroups = { system-users@localhost : "^(root|vortex|user|nobody)@localhost$" }


permissions.shortcuts = { all : ['user:pseudo:all'] }

permissions.shortcuts.read = all
permissions.shortcuts.read-write = 
permissions.shortcuts.add-comment = 
permissions.shortcuts.read-processed =

permissions.blacklist.all = user:pseudo:all
permissions.blacklist.read-write = user:pseudo:all
permissions.blacklist.add-comment = user:pseudo:all
#permissions.blacklist.bind-template = user:pseudo:all
permissions.blacklist.read = 
permissions.blacklist.read-processed = 


archiver.legacyPrincipalMappings = { 'p\:pseudo\:authenticated' \: null, \
                                     'p\:pseudo\:owner'         \: null }

archiver.legacyActionMappings = { 'write'        \: 'read-write', \
                                  'add-comment'  \: null, \
                                  'edit-comment' \: null, \
                                  'bind'         \: null }

manage.defaultAllowedGroups = *

saml.authenticationURL = 
saml.logoutURL = 
saml.serviceIdentifier = 
saml.serviceProviderURI = ${appResources.baseURL}/saml/sp
saml.keystorePath = file://${user.home}/.keystore
saml.keystorePassword = changeit
saml.privateKeyAlias = saml.${webHostName}
saml.privateKeyPassword = 
saml.idpCertificate =
saml.idpCertKey = weblogin
saml.metadataServiceURI = ${appResources.baseURL}/saml/metadata
saml.metadataService.contactPersonGivenName = ${user.name}
saml.metadataService.contactPersonSurName = ${user.name}
saml.metadataService.contactPersonEmailAddress = ${webmaster}
saml.urlSessionAttribute =

saml.lostPost.URI = ${appResources.baseURL}/saml/lp
saml.lostPost.directory = ${repository.tempDir}/saml.lost-post
saml.lostPost.timeoutSeconds = 600
saml.lostPost.autosubmit = true
saml.lostPost.secureCookies = false

saml.ieCookieHandlingEnabled = true

saml.ieCookieTicket = vrtxieextra1
saml.ieCookieLogoutTicket = vrtxieextra2
saml.vrtxAuthSP = VRTX_AUTH_SP
saml.uioAuthIDP = UIO_AUTH_IDP
saml.uioAuthSSO = UIO_AUTH_SSO
saml.ieReturnURL = ieReturnURL

saml.ieCookieSetterURI = ${appResources.baseURL}/saml/iecookiesetter

# Server administrator (webmaster):
webmaster = me@my-email.com

structuredResources.definitionsLocation = classpath:/vortikal/beans/vhost/structured-resources.vrtx
structuredResources.recompileScriptLocation = classpath:/vortikal/beans/standard-extensions/structured-resources-refresh/recompile.bsh

# Index files to override collection listing:
indexFiles = index.xml,index.html,index.htm

# Default page limit for collection listings:
collectionListing.defaultPageLimit = 25

collectionListing.feed.protocolRelativeImages = \#{vrtx.webProtocolRestricted == 'https'}

# Local principals in repository (loaded if exists):
repositoryPasswdFile = /vrtx/passwd

# Perform visualization of broken links in preview mode?
preview.visualizeBrokenLinks = true

linkCheck.htmlClass = vrtx-link-check

# System job config:
systemjob.linkcheck.recent.trigger = 30,30
systemjob.linkcheck.queryFilterExpression = (type IN json-resource OR type IN html OR type IN managed-xml OR type IN collection) AND uri \!\= /vrtx/\*
systemjob.linkcheck.trigger = 60,45
systemjob.linkcheck.enabled = false
systemjob.linkcheck.recent.enabled = ${systemjob.linkcheck.enabled}
systemjob.linkcheck.batch = 100
systemjob.linkcheck.locking = false
# Minimum number of seconds that must have passed since last completed link check
# for unmodified resource, before a new checking round is started:
systemjob.linkcheck.minRecheckSeconds = 86400
# Config in repository (JSON list of regular expressions):
systemjob.linkcheck.blacklist = /vrtx/linkcheck.blacklist



report.brokenLinks.enabled = ${systemjob.linkcheck.enabled}

# Path to the collection of XSL templates used for transforming XML
# documents:
# xslFilePath =

# Negative value means "no limit": 
xslMaxSimultaneousTransformations=-1

# Local groups in repository (loaded if exists):
repositoryGroupsFile = /vrtx/groups

# Possible values: httpBasicAuthenticationChallenge, httpDigestAuthenticationChallenge
webAuthenticationChallenge = httpDigestAuthenticationChallenge
webdavAuthenticationChallenge = httpDigestAuthenticationChallenge


httpBasicAuthenticationHandler.requireSecureConnection = false

# Produce stacktraces and extended error information on error pages?
debugErrors = true

errorHandler.notAuthorized.logErrors = false

# Path to freemarker templates (to override, use file:///) 
templateLoaderPath = classpath:/vortikal/ftl

# Is freemarker debugging enabled?
freemarkerDebug = false

xslRepositoryPath = /vrtx/vortex-webdocuments

# Number of seconds XML schemas are cached:
xmlSchemaRegistry.cacheSeconds = 900
# Check cache for expired items every 60 seconds:
xmlSchemaRegistry.cacheRefreshInterval = 60

copyrightHelpURL.no = 
copyrightHelpURL.nn = 
copyrightHelpURL.en = 

helpURL.en = http://www.uio.no/english/services/it/web/vortex/
helpURL.no = http://www.uio.no/tjenester/it/web/vortex/hjelp/
helpURL.nn = ${helpURL.no}
helpURL = ${helpURL.no}

helpURL.editor.en = http://www.uio.no/english/services/it/web/vortex/help/getting-started/edit.html
helpURL.editor.no = http://www.uio.no/tjenester/it/web/vortex/hjelp/admin/editor/
helpURL.editor.nn = ${helpURL.editor.no}
helpURL.editor = ${helpURL.editor.no}

helpURL.editor.collection.no = http://www.uio.no/tjenester/it/web/vortex/hjelp/admin/mappe-edit/
helpURL.editor.collection.nn = http://www.uio.no/tjenester/it/web/vortex/hjelp/admin/mappe-edit/

helpURL.editor.image.no = http://www.uio.no/tjenester/it/web/vortex/hjelp/admin/bilde-lyd-video/
helpURL.editor.audio.no = http://www.uio.no/tjenester/it/web/vortex/hjelp/admin/bilde-lyd-video/
helpURL.editor.video.no = http://www.uio.no/tjenester/it/web/vortex/hjelp/admin/bilde-lyd-video/
helpURL.editor.image.nn = http://www.uio.no/tjenester/it/web/vortex/hjelp/admin/bilde-lyd-video/
helpURL.editor.audio.nn = http://www.uio.no/tjenester/it/web/vortex/hjelp/admin/bilde-lyd-video/
helpURL.editor.video.nn = http://www.uio.no/tjenester/it/web/vortex/hjelp/admin/bilde-lyd-video/


editHelpURL = http://www.uio.no/tjenester/it/web/vortex/hjelp/admin/xml-edit/

jcr.repoConfig = classpath:org/vortikal/repository/store/jcr/repository.xml

repositoryID = localhost
databaseDriver = org.postgresql.Driver
sqlDialect = postgresql
optimizedAclCopySupported = false
maxDatabaseConnections = 10
databaseURL = jdbc:postgresql:vortex
urlEncodeFileNames = false
databaseOperationWarningTimeLimit = 20000 
databaseOperationWarningLogStackTraces = false
repository.tempDir = ${java.io.tmpdir}
repository.maxResourceChildren = 3000
repository.permanentDeleteOverdueLimitInDays = 60

# Default main backend is always cache (whether JCR or not) 
repositoryBackend = repository.cache

# Possible values: repository.sqlMapDao, repository.jcrDao:
# repository.dao is wrapped by repositoryBackend (cache)
repository.dao = repository.sqlMapDao
# Possible values: repository.fsContentStore, repository.jcrDao:
repository.contentStore = repository.fsContentStore
# Possible values: repository.sqlMapRevisionDao
repository.revisionStore = repository.defaultRevisionStore
# Possible values: repository.sqlMapCommentDao, repository.jcrCommentDao:
repository.commentDao = repository.sqlMapCommentDao

repository.indexUpdater.interval = 5000
# Check for documents to publish/unpublish every minute
repository.publisher.interval = 60
repository.media.generator.interval = 60
repository.media.generator.batch = 100

vms.username = 
vms.password = 

resourceCacheSize = 1000
# Set to 'true' to enable global read-only mode:
repositoryReadOnly = false
# List of root paths which shall be read-only in repository.
# Setting this list to '/' is equivalent to setting repositoryReadOnly to 'true'.
repositoryReadOnlyRoots =

# Report Last-Modified (and handle If-Modified-Since) for documents of
# these types (fully qualified schema URLs):
xsltHandleLastModifiedSchemas = 

# Some well known, often-referred to XML documents are cached (resource URIs):
xslDocumentCachedResources = 

# XSLT stylesheet references for XML documents are placed in the
# document's XML schema, inside an "xsd:annotation" element:
viewXslTransformationSchemaXPath = /xsd:schema/xsd:annotation/xsd:appinfo/view/xsl
editXslTransformationSchemaXPath = /xsd:schema/xsd:annotation/xsd:appinfo/edit/xsl
rssXslTransformationSchemaXPath = /xsd:schema/xsd:annotation/xsd:appinfo/rss/xsl

# Default values for property evaluation:
defaultTextResourceCharacterEncoding = utf-8
defaultHtmlResourceCharacterEncoding = iso-8859-1
defaultXmllResourceCharacterEncoding = utf-8
defaultXHtml10TransitionalResourceCharacterEncoding = utf-8

# Audio resource type property mappings:
resourcetype.audio.audiofileProperty.author = author
resourcetype.audio.audiofileProperty.album = album
resourcetype.audio.audiofileProperty.title = title
resourcetype.audio.audiofileProperty.track = mp3.id3tag.track
resourcetype.audio.audiofileProperty.genre = mp3.id3tag.genre

# Image thumbnail width in pixels:
resourcetype.image.thumbnail.width = 250
# Max source image file size when generating thumbnail (bytes):
resourcetype.image.thumbnail.maxSourceImageFileSize = 35000000
# Max source image estimated memory usage when generating thumbnail (bytes):
# 300000000 bytes allows a maximum 10000x10000 24bpp image to be scaled.
# 32bpp images will be allowed to use 33% more memory than this limit, since
# estimate is optimistically only valid for 24bpp.
resourcetype.image.thumbnail.maxSourceImageRawMemoryUsage = 300000000

# Editor settings (NB: settes i hosts prosjektet):
#editor.fck.version = 2.6.5
#editor.fck.resourcesURL = ${webResources.baseURL}/fckeditor-build-${editor.fck.version}
#editor.fck.browseURL = ${appResources.baseURL}/fckeditor/browse
editor.fck.resourcesURL = ${webResources.baseURL}/ckeditor-build
editor.fck.browseURL = ${appResources.baseURL}/ckeditor-build/browse

#Autocomplete settings:
autoComplete.appResourceURL = ${appResources.baseURL}/autocomplete

# Stylesheet to insert when converting documents to XHTML:
tidyConvertInsertedCssRef =

plaintextEdit.maxDocumentSize = 300000
preview.text.maxDocumentSize = 300000

visualProfileAspect.configFile = /vrtx/decorating/visual-profile.txt

# Decorating section:
decorating.templateConfigFile = /vrtx/decorating/config.txt
decorating.supportMultipleTemplates = true
decorating.templatesCollection = /vrtx/decorating/templates
decorating.tidyXhtml = true
decorating.maxDocumentSize = 300000
decorating.hiddenComponents = 

decorating.feedComponent.identifier = Feed Fetcher
decorating.feedComponent.cacheTimeoutSeconds = 300
decorating.feedComponent.connectTimeoutSeconds = 5
decorating.feedComponent.readTimeoutSeconds = 5
decorating.feedComponent.maxCachedItems = 100

decorating.includeComponent.identifier = URL Fetcher
decorating.includeComponent.cacheTimeoutSeconds = 300
decorating.includeComponent.connectTimeoutSeconds = 5
decorating.includeComponent.readTimeoutSeconds = 5
decorating.includeComponent.maxCachedItems = 100
decorating.includeComponent.maxDocumentSize = 1000000

decorating.includeComponent.esiLocations = 
decorating.includeComponent.inlineEsiLocations = ${decorating.includeComponent.esiLocations}

decorating.subFolderMenuComponent.searchLimit = 500
decorating.listMenuComponent.searchLimit = 500


decorating.defaultCssComponent.defaultCss = ${themeBaseURL}/view-components.css
# decorating.tableOfContentsComponent.javascript = http://www.uio.no/vrtx/javascript/toc.js

# Commenting section:
commenting.title.enabled = false
commenting.html.enabled = true

documentTemplatesCollection = /vrtx/templates
documentTemplatesParseCategoryTemplates = false
documentTemplatesParseTopTemplates = true

# Document templates
templates.documentTemplatesBaseUri = /vrtx/doc-templates
templates.documentTemplatesConfigFile = ${templates.documentTemplatesBaseUri}/config.txt
templates.defaultDocumentTemplatesCollection = ${documentTemplatesCollection}

# Folder templates
templates.folderTemplatesBaseUri = /vrtx/folder-templates
templates.folderTemplatesConfigFile = ${templates.folderTemplatesBaseUri}/config.txt
templates.defaultFolderTemplatesCollection = ${templates.folderTemplatesBaseUri}/default

# Set this to false if repository root isn't served by the web service
servesWebRoot = true

# Needed for admin.html and root-admin.html (whether to add black line or not)
displayUpscoping =

tagService.defaultExpression = ${tagService.defaultExpression.${servesWebRoot}}
tagService.defaultExpression.true = /?vrtx=tags&tag=%v
tagService.defaultExpression.false = ./?vrtx=tags&tag=%v&scope=/

# mailServer should not be defined in Vortikal but keep it for now for testing/developing purposes
email.mailServer = smtp.uio.no
email.mailServerPort = 465
email.mailServerProtocol = smtps
email.concurrencyLimit = 2

mailFeedback.recipients = tilbakemelding@admin.uio.no
mailFeedback.sender = noreply@usit.uio.no
mailFeedback.throttle.window = 10
mailFeedback.throttle.requestsInWindow = 10

emailAFriend.siteName = ${repositoryID}
emailAFriend.mailServer = ${email.mailServer}
emailAFriend.mailServerPort = ${email.mailServerPort}
emailAFriend.mailServerProtocol = ${email.mailServerProtocol}
emailAFriend.concurrencyLimit = ${email.concurrencyLimit}

##############################################

# jdbcUsername =
# jdbcPassword =
# repositoryDataDirectory =
# repositoryTrashCanDirectory = 
# repositoryRevisionDirectory = 
revisionStore.tempDir = ${repository.tempDir}/revisions-tmp


# Root path to storage directory for indexes
# indexStorageRootPath =

# Max number of concurrent always-fresh read-only index reader instances used
# for query processing:
indexMaxReadOnlyReaders = 1
# Max acceptable dirty age for unauthenticated queries.
# Set to equal to or higher than indexAgingReadOnlyReaderThreshold to allow
# use of dirty readers for anonymous queries.
indexUnauthenticatedQueryMaxDirtyAge = 60
# Accept certain amount of index dirty age for data reports generated from index
# regardless of user token used while executing the report.
indexDataReportingMaxDirtyAge = ${indexUnauthenticatedQueryMaxDirtyAge}

indexMaxAgingReadOnlyReaders = 1
# Max dirty age of aging readers:
indexAgingReadOnlyReaderThreshold = ${indexUnauthenticatedQueryMaxDirtyAge}


# Max number of concurrent queries on index
# (independent of number of parallel read-only readers):
indexMaxConcurrentQueries = 8


# Report application errors via email? Specify address below:
# reportErrorsToMailAddress =

# Standard extensions to load (see conf/beans/standard-extensions for
# a list):
#
# FIXME: currently, transformXml and editXml are required for
# the resource type 'managed-xml' to work, should be resolved:
standardExtensions = classpath\:/vortikal/beans/standard-extensions/transformXml/transformXml.xml,classpath\:/vortikal/beans/standard-extensions/editXml/editXml.xml

aggregation.limit = 5
aggregation.maxRecursiveDepth = 2

event.listing.days.ahead = 5

# set to 'structured.' to list structured articles and events
# leave empty for default listing
# DON'T FORGET THE DOT!!! i.e. 'structured.' NOT 'structured'
override.listing.prefix = structured.

# Dynamic title resolver configuration
decorating.titleResolver.config = /vrtx/decorating/title-config.txt
decorating.titleResolver.fallbackTemplate = #{'$'}{title} - #{'$'}{hostname}

# Webdav protocol logger
# Max bytes to log for request or response body:
davlogger.maxLogBytesBody = 8192

# RSS
rss.feed.logo.path =
